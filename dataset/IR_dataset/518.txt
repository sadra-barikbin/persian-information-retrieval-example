رشته معماری رایانه دارای سه زیر مجموعه اصلی است: 

* معماری مجموعه دستورالعمل‌ها (ISA): کد ماشین را که پردازنده می‌خواند و بر اساس آن عمل می‌کند، بعلاوه اندازه کلمه، حالت آدرس دهی، ثبات و نوع داده را تعریف می‌کند.
* معماری خرد : همچنین به عنوان "سازمان رایانه‌ای" شناخته می‌شود. این روش نحوه اجرای ISA توسط یک پردازنده خاص را بیان می‌کند. به عنوان مثال اندازه حافظه نهان پردازنده رایانه، مسئله‌ای است که به طور کلی هیچ ارتباطی با ISA ندارد.
* طراحی سیستم‌ها : شامل سایر مولفه‌های سخت افزاری درون یک سیستم محاسباتی مانند پردازش داده غیر از CPU (به عنوان مثال دسترسی مستقیم به حافظه ) ، مجازی سازی و پردازش چندگانه

فناوری‌های دیگری نیز در معماری رایانه وجود دارد. فن آوری‌های زیر در شرکت‌های بزرگتر مانند اینتل مورد استفاده قرار می‌گیرد و در سال 2002 تخمین زده شد که 1٪ از کل معماری رایانه را شامل می‌شود:

* معماری کلان : لایه‌های معماری انتزاعی‌تر از معماری خرد است.
* معماری مجموعه دستورالعمل‌های اسمبلی: یک اسمبلر هوشمند ممکن است یک زبان اسمبلی انتزاعی را که برای گروهی از ماشین‌ها متداول است، برای اجراهای مختلف به زبان ماشین کمی متفاوت تبدیل کند.

معماری کلان قابل مشاهده توسط برنامه نویسان : ابزارهای زبان‌های سطح بالاتر مانند کامپایلرها ممکن است یک رابط یا قرارداد ثابت برای برنامه نویسان با استفاده از آنها تعریف کنند، تفاوت بین ISA ، UISA و ریز معماری‌های اساسی را انتزاع کنند. برای مثال، استانداردهای C ،C ++ یا Java، معماری‌های مختلف قابل مشاهده توسط برنامه نویس را تعریف می‌کنند.

* میکرو کد(ریزبرنامه سازی) : میکروکد نرم افزاری است که دستورالعمل‌های کار با تراشه را ترجمه می‌کند. مانند یک پوشش در اطراف سخت افزار عمل می‌کند و نسخه مطلوبی از رابط مجموعه دستورالعمل سخت افزار را ارائه می‌دهد. این امکان ترجمه دستورالعمل‌ها، انتخاب‌های انعطاف پذیری را به طراحان تراشه می‌دهد: به عنوان مثال:
* 1) نسخه جدید تراشه بهبود یافته می‌تواند با استفاده از میکروکد دقیقاً همان دستورالعمل نسخه قبلی تراشه را ارائه دهد، بنابراین تمام نرم افزارهایی که این مجموعه دستورالعمل‌ها را هدف قرار می‌دهند بدون نیاز به تغییر روی تراشه جدید اجرا می‌شوند.
* 2) میکروکد می‌تواند مجموعه دستورالعمل‌های متنوعی را برای همان تراشه زیربنایی ارائه دهد، که به آن امکان می‌دهد تا نرم افزارهای متنوعی را اجرا کند.

* UISA : دستور العمل کاربر برای مجموعه معماری، به یکی از سه زیر مجموعه دستورالعمل CPU RISC(رایانه کم دستور) ارائه شده توسط پردازنده های PowerPC RISC اشاره دارد. زیر مجموعه UISA ، دستورالعمل های RISC مورد علاقه توسعه دهندگان برنامه هستند. دو زیر مجموعه دیگر دستورالعمل‌های VEA (معماری محیط مجازی) است که توسط توسعه دهندگان سیستم مجازی سازی استفاده می‌شود و OEA (معماری محیط عملیاتی) که توسط توسعه دهندگان سیستم عامل استفاده می‌شود. 

* معماری پین : عملکردهای سخت افزاری که یک ریزپردازنده باید در اختیار یک پلتفرم سخت افزاری قرار دهد ، مثلاً پایه های x86 A20M ، FERR / IGNNE یا FLUSH. همچنین پیام هایی که پردازنده باید منتشر کند تا حافظه نهان خارجی آزاد شود. توابع معماری پین انعطاف پذیرتر از توابع ISA است زیرا سخت افزار خارجی می‌تواند با رمزگذاری های جدید سازگار شود یا از پین به پیام تغییر کند. اصطلاح "معماری" مناسب است ، زیرا توابع باید برای سیستم‌های سازگار ارائه شوند، حتی اگر روش دقیق تغییر کند.