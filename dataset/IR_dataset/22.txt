توصیفی که از عملکرد پایه‌ای یک پردازنده در بخش قبلی شد، ساده‌ترین فرمی است که یک پردازنده می‌تواند داشته باشد. این نوع از پردازنده که معمولاً آن را ساب اسکالر(subscalar) می‌نامند، یک دستور را روی یک یا دو قطعهٔ داده، در یک زمان اجرا می‌کند. این فرایند موجب یک ناکارآمدی ذاتی در پردازنده‌های ساب اسکالر می‌شود. از آنجایی که فقط یک دستور در یک زمان اجرا می‌شود، کل پردازنده باید منتظر بماند تا آن دستور کامل شود تا بتواند به دستور بعدی برود. در نتیجه پردازنده‌های ساب اسکالر، در رابطه با دستوراتی که بیش از یک پالس ساعت (چرخهٔ ساعت) برای اجرا شدن کامل طول می‌کشند، معطل می‌ماند. حتی اضافه کردن یک واحد اجرایی دیگر بهبود زیادی روی عملکرد ندارد، و در این حالت به جای اینکه یک مسیر معطل باشد، دو مسیر معطل می‌ماند و تعداد ترانزیستورهای بلااستفاده افزایش می‌یابد. این طراحی، که در آن منابع اجرایی پردازنده می‌تواند فقط یک دستور در یک زمان اجرا کند، قادر خواهد بود تا نهایتاً فقط به عملکردی در حد اسکالر (یک دستور در یک چرخهٔ ساعت) برسد. با این وجود عملکرد آن تقریباً همیشه ساب اسکالر (کمتر از یک دستور در یک چرخه) است.
تلاش برای رسیدن به عملکردی در حد اسکالر یا بهتر از آن منجر به پیدایش انواعی از روش‌های طراحی شد که باعث می‌شود تا پردازنده، کمتر به صورت خطی و بیشتر به صورت موازی عمل کند. در هنگام استفاده از اصطلاح موازی سازی برای پردازنده‌ها، دو اصطلاح به‌طور کلی، برای طبقه‌بندی این تکنیک‌های طراحی استفاده می‌شود:
* "موازی سازی در سطح-دستور العمل" (instruction-level parallelism)، که هدف آن افزایش سرعت اجرای دستورالعمل‌ها در داخل یک پردازنده است (یا به عبارتی افزایش استفاده از منابع اجرایی روی همان چیپ (on-die)).
* "موازی سازی در سطح-وظایف" (task-level parallelism)، که هدف آن افزایش تعداد ریسمان‌ها یا فرایندهایی است که یک پردازنده می‌تواند به‌طور هم‌زمان اجرا کند.