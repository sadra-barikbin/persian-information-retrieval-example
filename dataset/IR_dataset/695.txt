دوره دهه ۶۰ تا اواخر دهه ۷۰ گسترش مثال‌های عمده زبان پرکاربرد امروز را به همراه داشت. با این حال بسیاری از جنبه‌های آن بهینه‌سازی ایده‌های اولیه نسل سوم زبان برنامه‌نویسی بود:
* ای‌پی‌ال (APL) برنامه‌نویسی آرایه‌ای (Array programming) را معرفی کرد و برنامه‌نویسی کاربردی را تحت تأثیر قرار داد.
* PL/i(NPL) دراوایل دهه ۶۰ طراحی شده بود تا ایده‌های خوب فورترن و کوبول را بهم پیوند دهد.
* در دهه ۶۰، سیمولا اولین زبانی بود که برنامه‌نویسی شیء گرا را پشتیبانی می‌کرد، به دنبال آن در اواسط دهه۷۰، Smalltalk به عنوان اولین زبان کاملاً شیء گرا معرفی شد.
* سی (C) بین سال‌های ۱۹۶۹ تا ۱۹۷۳ به عنوان زبان برنامه‌نویسی سیستمی طراحی شد و در سیستم عامل‌های بسیاری بکار گرفته شد.
* پاسکال و بیسیک (که در آینده به زبان ویژوال بیسیک معروف شد) در ابتدا یک زبان آموزشی بودند ولی بعدها با ارائه کامپایلرهای مختلف آن کاربردی شدند.
* لیسپ از جمله زبان‌هایی بود که براساس پردازش لیست‌ها کار می‌کرد و برای الگوریتم‌های هوش مصنوعی مناسب بود.
* پرولوگ، طراحی شده در ۱۹۷۲، اولین زبان برنامه‌نویسی منطقی بود؛ که برای الگوریتم‌های هوش مصنوعی مناسب بود.
* در ۱۹۷۸ ML سیستم نوع چند ریخت روی لیسپ ایجاد کرد، و در زبان‌های برنامه‌نویسی کاربردی ایستا نوع‌گذاری شده پیشگام شد.
هر یک از این زبان‌ها یک خانوادهٔ بزرگ از وارثین خود را به جای گذاشتند، و مدرن‌ترین زبان‌ها، از تبار حداقل یکی از زبان‌های بالا به‌شمار می‌آیند.

دهه‌های ۶۰ و ۷۰، مناقشات بسیاری روی برنامه‌نویسی ساخت یافته به خود دیدند، و اینکه آیا زبان‌های برنامه‌نویسی باید طوری طراحی شوند که آن‌ها را پشتیبانی کنند.

«ادسگر دیکسترا» در نامه‌ای معروف در ۱۹۶۸ که در ارتباطات ACM منتشر شد، استدلال کرد که دستورgoto باید از تمام زبان‌های سطح بالا حذف شود.

در دهه‌های ۶۰ و ۷۰ توسعهٔ تکنیک‌هایی صورت گرفت که اثر یک برنامه را کاهش می‌داد و در عین حال بهره‌وری برنامه‌نویس و کاربر را بهبود بخشید. دسته کارت برای ۴GL اولیه بسیار کوچکتر از برنامهٔ هم سطح بود که با ۳GL deck نوشته شده بود.